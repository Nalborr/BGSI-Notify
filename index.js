const { Client, EmbedBuilder, GatewayIntentBits } = require('discord.js');
const express = require('express');
const bodyParser = require('body-parser');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages
    ]
});

// ID –∫–∞–Ω–∞–ª–æ–≤ Discord (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏)
const CHEST_CHANNEL_ID = 'process.env.CHEST_CHANNEL_ID'; // ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å—É–Ω–¥—É–∫–æ–≤
const EGG_CHANNEL_ID = 'process.env.EGG_CHANNEL_ID';     // ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —è–∏—Ü

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è message_id (—á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)
const messageCache = new Map();

// –°–æ–∑–¥–∞–Ω–∏–µ Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();
app.use(bodyParser.json());

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
app.post('/api/roblox', async (req, res) => {
    try {
        const { type, name, timer, luck } = req.body;

        if (type === 'chest') {
            const channel = client.channels.cache.get(CHEST_CHANNEL_ID);
            const embed = new EmbedBuilder()
                .setTitle('üß∞ –ù–æ–≤—ã–π —Å—É–Ω–¥—É–∫ –ø–æ—è–≤–∏–ª—Å—è!')
                .setColor(0xFFD700)
                .addFields(
                    { name: '–¢–∏–ø —Å—É–Ω–¥—É–∫–∞', value: name, inline: true },
                    { name: '–í—Ä–µ–º—è', value: timer, inline: true }
                )
                .setTimestamp();

            const cacheKey = `${name}-chest`;
            if (messageCache.has(cacheKey)) {
                // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const msg = await channel.messages.fetch(messageCache.get(cacheKey));
                await msg.edit({ embeds: [embed] });
            } else {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const msg = await channel.send({ embeds: [embed] });
                messageCache.set(cacheKey, msg.id);
            }
        } else if (type === 'egg') {
            const channel = client.channels.cache.get(EGG_CHANNEL_ID);
            const embed = new EmbedBuilder()
                .setTitle('ü•ö –ù–æ–≤–æ–µ —è–π—Ü–æ –ø–æ—è–≤–∏–ª–æ—Å—å!')
                .setColor(0x00FF00)
                .addFields(
                    { name: '–¢–∏–ø —è–π—Ü–∞', value: name, inline: true },
                    { name: '–í—Ä–µ–º—è', value: timer, inline: true },
                    { name: '–£–¥–∞—á–∞', value: luck, inline: true }
                )
                .setTimestamp();

            const cacheKey = `${name}-egg`;
            if (messageCache.has(cacheKey)) {
                // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const msg = await channel.messages.fetch(messageCache.get(cacheKey));
                await msg.edit({ embeds: [embed] });
            } else {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const msg = await channel.send({ embeds: [embed] });
                messageCache.set(cacheKey, msg.id);
            }
        }

        res.status(200).send('Success');
    } catch (error) {
        console.error('Error:', error);
        res.status(500).send('Error');
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 8080;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

// –°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
client.once('ready', () => {
    console.log(`Bot is ready as ${client.user.tag}`);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.login(process.env.DISCORD_TOKEN);
